version: "3.7"

volumes:
  postgres_data:

secrets:
  ejercicio_postgres_password:
    external: true

services:
  postgres:
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - ${DEMO_PG_PORT:-5432}:5432
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd 

    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.labels.data == true
    secrets:
      - source: ejercicio_postgres_password
        target: postgres-passwd

  web:
    image: docker.pkg.github.com/vovimayhem/docker-spring-example-2/spring-demo:latest
    command: [ "java", "-jar", "demo-0.0.1-SNAPSHOT.jar" ]
    ports:
      - ${DEMO_WEB_PORT:-8080}:${DEMO_WEB_PORT:-8080}
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/demo_production
      SPRING_DATASOURCE_USERNAME: postgres
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres-passwd
      PORT: ${DEMO_WEB_PORT:-8080}

    deploy:
      placement:
        constraints:
          - node.role == worker
          - node.labels.web == true
      resources:
        reservations:
          memory: "256M"
        limits:
          memory: "512M"

    secrets:
      - source: ejercicio_postgres_password
        target: postgres-passwd

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8000:8080"
    stop_grace_period: 1m
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints:
          - node.role == manager